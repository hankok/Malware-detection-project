import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class Node {
	int pid;				// process id 
	int ppid;				// parent process id
	String filepath;		// file path (not necessarily an exe file)
	List<Node> children;	// sub-processes it created
	Edge edge;				// bonds
	
	Node (int pid, int ppid, String filepath, Edge edge) {
		this.pid = pid;
		this.filepath = filepath;
		this.ppid = ppid;
		children = new ArrayList<Node>();
		this.edge = edge;
	}
	
	@Override 
	public String toString() {
		
		StringBuilder sb = new StringBuilder();
		Queue<Node> q = new LinkedList<Node>();
		q.add(this);
		
		while (!q.isEmpty()) {
			Node e = q.poll();
			for (Node c : e.children) {
				sb.append("PID:" + String.valueOf(e.pid) + "  " + e.filepath + "   PPID:" + String.valueOf(e.ppid) + "  " + 
						  c.edge.rule + "\t" + c.filepath + "\n");
				q.add(c);
			}
		}
		return sb.toString();
	}
}
